{"version":3,"sources":["components/Filter.js","components/Person.js","components/PersonForm.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","value","onChange","Person","person","deletePerson","name","number","onClick","PersonForm","addPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","event","target","type","baseUrl","personService","getAll","axios","get","then","response","data","create","newPerson","post","remove","id","url","delete","update","updatedPerson","put","Notification","successMessage","errorMessage","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","persons","setPersons","newFilter","setNewFilter","shownPersons","setShownPersons","setSuccessMessage","setErrorMessage","useEffect","initialPersons","filter","toLowerCase","includes","updatePerson","currentPerson","find","returnedPerson","setTimeout","map","catch","error","preventDefault","existingPerson","window","confirm","concat","personName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2635f4f9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ value, onChange }) => (\n    <div>\n        filter shown with <input\n            value={value}\n            onChange={onChange}\n        />\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => (\n    <li>\n        {person.name} {person.number}\n        <button onClick={deletePerson}>delete</button>\n    </li>\n)\n\nexport default Person","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, setNewName, newNumber, setNewNumber }) => (\n    <form onSubmit={addPerson}>\n        <div>\n            name: <input\n                value={newName}\n                onChange={event => setNewName(event.target.value)}\n            />\n        </div>\n        <div>\n            number: <input\n                value={newNumber}\n                onChange={event => setNewNumber(event.target.value)}\n            />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm\n\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newPerson => {\n    return axios.post(baseUrl, newPerson).then(response => response.data)\n}\n\nconst remove = id => {\n    const url = `${baseUrl}/${id}`\n    return axios.delete(url)\n}\n\nconst update = (id, updatedPerson) => {\n    const url = `${baseUrl}/${id}`\n    return axios.put(url, updatedPerson).then(response => response.data)\n}\n\nconst personService = { getAll, create, remove, update }\n\nexport default personService","import React from 'react'\n\nconst Notification = ({ successMessage, errorMessage }) => {\n    if (successMessage === null && errorMessage === null) {\n        return null\n    }\n\n    const notificationStyleSuccess = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n\n    const notificationStyleError = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n\n    return (\n        <div style={successMessage ? notificationStyleSuccess : notificationStyleError}>\n            {successMessage || errorMessage}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport Person from './Person'\nimport PersonForm from './PersonForm'\nimport personService from '../services/persons'\nimport Notification from './Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newFilter, setNewFilter] = useState('')\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [shownPersons, setShownPersons] = useState([...persons])\n    const [successMessage, setSuccessMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    useEffect(() => {\n        setShownPersons(persons.filter(person =>\n            person.name.toLowerCase().includes(newFilter.toLowerCase())\n        ))\n    }, [newFilter, persons])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const existingPerson = persons.find(person => person.name === newName)\n        if (existingPerson) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                updatePerson(existingPerson.id)\n                setNewName('')\n                setNewNumber('')\n            }\n        } else {\n            const newPerson = { name: newName, number: newNumber }\n            personService\n                .create(newPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setSuccessMessage(`Added ${newName}`)\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 5000)\n                    setNewName('')\n                    setNewNumber('')\n                })\n                .catch(error => {\n                    setErrorMessage(error.response.data.error)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const deletePerson = id => {\n        const personName = persons.find(person => person.id === id).name\n        if (window.confirm(`Delete ${personName} ?`)) {\n            personService\n                .remove(id)\n                .then(setPersons(persons.filter(person => person.id !== id)))\n        }\n    }\n\n    const updatePerson = id => {\n        const currentPerson = persons.find(person => person.id === id)\n        const updatedPerson = { ...currentPerson, number: newNumber }\n\n        personService\n            .update(id, updatedPerson)\n            .then(returnedPerson => {\n                setSuccessMessage(`Updated ${newName}`)\n                setTimeout(() => {\n                    setSuccessMessage(null)\n                }, 5000)\n                setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n            })\n            .catch(error => {\n                if (error.response.data.error) {\n                    setErrorMessage(error.response.data.error)\n                } else {\n                    setErrorMessage(`Information of ${newName} has already been removed from server`)\n                    setPersons(persons.filter(person => person.id !== id))\n                }\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            })\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification successMessage={successMessage} errorMessage={errorMessage} />\n            <Filter\n                value={newFilter}\n                onChange={event => setNewFilter(event.target.value)}\n            />\n\n            <h2>add a new</h2>\n            <PersonForm\n                addPerson={addPerson}\n                newName={newName}\n                setNewName={setNewName}\n                newNumber={newNumber}\n                setNewNumber={setNewNumber}\n            />\n\n            <h2>Numbers</h2>\n            <ul>\n                {shownPersons.map(person =>\n                    <Person\n                        key={person.id}\n                        person={person}\n                        deletePerson={() => deletePerson(person.id)}\n                    />\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}